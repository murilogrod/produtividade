1) Baixar a imagem do jBPM Server Full versão 7.23.0.Final customizado para a CAIXA (jbpm-server-full-7.23.0.Final.tar);
	- O arquivo contêm 2,7GB, e por isso não foi adicionado ao repositório git do projeto, solicitamos que a CEPTI indique um compartilhamento que o PEDES/GO possa acessar, e onde deverá ser armazenado;
	
	1.1) Adiciona essa imagem no servidor docker que executará o JBPM através do comando:
			docker load -i <path_da_imagem>/jbpm-server-full-7.23.0.Final.tar
	
	
2) Preparar o banco de dados para a subida do JBPM:
	2.1) Criar um grupo e um usuário específicos para o JBPM:
		2.1.1) Criar o grupo (sugestão: bpm_group);
		2.1.2) Criar o usuário, passando na configuração a variável "search_path" com o valor contendo o nome do schema de banco que será usado para o JBPM (sugestão: bpmusr);
		2.1.3) O script SQL gerado ao final deverá ser semelhante ao que está abaixo:
	
		CREATE ROLE bpmusr LOGIN	
		  ENCRYPTED PASSWORD 'md5e3e2f432c47297d95771b9a63cc1eab7'
		  NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;

		ALTER ROLE bpmusr IN DATABASE posdes01
		  SET search_path = bpm;
		GRANT bpm_group TO bpmusr;

		
	2.2) No banco, criar o schema que será usado pelo JBPM (sugestão: bpm);
		2.2.1) O Owner deverá ser o usuário criado anteriormente (bpmusr);
		2.2.2) Na configuração "Default Privileges", atribuir ao grupo que foi criado (bpm_group) todas as permissões para Tables, Sequences, Functions e Types;
		2.2.3) O script SQL gerado ao final deverá ser semelhante ao que está abaixo:
	
		CREATE SCHEMA bpm
		AUTHORIZATION bpmusr;

		GRANT ALL ON SCHEMA bpm TO bpmusr;
		GRANT ALL ON SCHEMA bpm TO bpm_group;

		ALTER DEFAULT PRIVILEGES IN SCHEMA bpm
			GRANT INSERT, SELECT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER ON TABLES
			TO bpm_group;

		ALTER DEFAULT PRIVILEGES IN SCHEMA bpm
			GRANT SELECT, UPDATE, USAGE ON SEQUENCES
			TO bpm_group;

		ALTER DEFAULT PRIVILEGES IN SCHEMA bpm
			GRANT EXECUTE ON FUNCTIONS
			TO bpm_group;

		ALTER DEFAULT PRIVILEGES IN SCHEMA bpm
			GRANT USAGE ON TYPES
			TO bpm_group;
			
	2.3) Finalmente, incluir o IP do servidor que irá rodar o container na lista do pg_hba.conf (Se a validação de IPs do PostgreSQL estiver habilitada);
		
		
3) Criar volumes do Docker para persistência de alguns diretórios selecionados do container:
		docker volume create jbpm-bin && docker volume create jbpm-conf && docker volume create jbpm-m2 && docker volume create jbpm-modules
	
	****IMPORTANTE: esses volumes armazenarão na máquina hospedeira dados do container que devem ser persistidos.
	As pastas devem ser mantidas seguras, para que não sejam removidas acidentalmente.

4) Iniciar um container usando a imagem baixada, através do comando abaixo (substituir valores entre <>):

	docker run -d --name jbpm \
	-p 8080:8080 -p 8001:8001 \
	-v jbpm-bin:/opt/jboss/wildfly/bin \
	-v jbpm-conf:/opt/jboss/wildfly/standalone/configuration \
	-v jbpm-m2:/root/.m2 \
	-v jbpm-modules:/opt/jboss/wildfly/modules \
	-e M2_HOME=/root/.m2 \
	jbpm-server-full:7.23.0.Final
	
	****IMPORTANTE: 
		- A opção -v mapeia um volume docker, do lado esquerdo dos dois pontos é fornecido o nome do volume, e do lado direito o diretório interno do container que será mapeado;
		- A opção -e define uma variável de ambiente para o container;	
	
	
5) Após iniciado o container pela primeira vez, será necessário aplicar os parâmetros do banco de dados criado na CEPTI/BR para o JBPM e para o SIMTR;
	5.1) Será necessário verificar onde na máquina hospedeira foi mapeado o volume jbpm-conf, nele está o standalone.xml que deverá ser alterado:
		5.1.1) Para verificar onde se encontram as pastas dos volumes existe o comando abaixo:
			docker volume inspect <nome_do_volume>
			
		5.1.2) Abrir o standalone.xml e editar os datasources pré-existentes que estarão apontando pro ambiente de desenvolvimento do PEDES:
			- Para os datasources "BusinessCentralDS" e "jBPMDS" inserir os dados do banco criado para o JBPM;
			- Para o datasource "SIMTR-DS", inserir os dados do banco do SIMTR (schema mtr);
		
	5.2) Verificar se é necessário alterar as tags <auth-server-url> dos <secure-deployments> do standalone.xml:
		5.2.1) Para os ambientes DEV, TQS e HMP da CEPTI, utilizar https://login.des.caixa/auth;
		5.2.2) Para o ambiente PRD da CEPTI, utilizar https://login.prd.caixa/auth;
		
	5.3) Salvar as alterações do standalone.xml e reiniciar o container
		docker stop <id_do_container>
		docker start <id_do_container>


* Para visualizar os logs do container executar o seguinte comando:
		docker logs -f <id_do_container>

