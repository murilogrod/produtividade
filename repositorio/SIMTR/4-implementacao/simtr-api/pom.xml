<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>br.gov.caixa.pedesgo</groupId>
        <artifactId>parent-all-jee7</artifactId>
        <version>RELEASE</version>
    </parent>

    <groupId>br.gov.caixa</groupId>
    <artifactId>simtr-api</artifactId>
    <version>1.16.0</version>
    <packaging>war</packaging>

    <name>SIMTR: Manutenção Tratamento e Reuso de Dados e Imagens</name>
    <url>http://10.123.15.51:8080/simtr-api</url>
    <description>API de negocios do sistema de manutenção, tratamento e reuso de dados e imagens</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
        message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
        resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>

        <!-- other plug-in versions -->
        <version.surefire.plugin>2.10</version.surefire.plugin>
        <skip.unit.tests>false</skip.unit.tests>
        <javassist.version>3.18.2-GA</javassist.version>
        <version.war.plugin>2.1.1</version.war.plugin>
        <commons.codec.version>1.9</commons.codec.version>
        <jasperreports.version>6.6.0</jasperreports.version>
        <commons.fileupload.version>1.3.3</commons.fileupload.version>

        <!-- jersey-multipart version -->
        <version.jersey.multipart>1.19.3</version.jersey.multipart>
		
        <sonar.exclusions>
            src/main/java/br/gov/caixa/simtr/visao/avaliacaoextracao/dto/**/*, 
            src/main/java/br/gov/caixa/simtr/controle/vo/sifrc/**/*, 
            src/main/java/br/gov/caixa/simtr/visao/dossiedigital/dto/**/*, 
            src/main/java/br/gov/caixa/simtr/visao/negocio/dto/**/*, 
            src/main/java/br/gov/caixa/simtr/visao/pae/dto/**/*, 
            src/main/java/br/gov/caixa/simtr/visao/publico/dto/**/*, 
            src/main/java/br/gov/caixa/simtr/visao/cadastro/dto/**/*,
            src/test/java/**/*
        </sonar.exclusions>
		
        <sonar.coverage.exclusions>
            src/main/java/br/gov/caixa/simtr/controle/servico/Migracao*.java,
            src/main/java/br/gov/caixa/simtr/controle/excecao/**/*,
            src/main/java/br/gov/caixa/simtr/controle/vo/**/*,
            src/main/java/br/gov/caixa/simtr/modelo/**/*,
            src/main/java/br/gov/caixa/simtr/relatorio/**/*,
            src/main/java/br/gov/caixa/simtr/util/Recursos.java,
            src/main/java/br/gov/caixa/simtr/visao/**/*,
            src/main/webapp/**/*,
            src/test/java/**/*
        </sonar.coverage.exclusions>
		
        <sonar.cpd.exclusions>
            src/main/java/br/gov/caixa/simtr/controle/vo/**/*,
            src/main/java/br/gov/caixa/simtr/modelo/mapeamento/**/*,
            src/main/java/br/gov/caixa/simtr/modelo/entidade/**/*,
            src/main/java/br/gov/caixa/simtr/visao/adapter/**/*,
            src/test/java/**/*
        </sonar.cpd.exclusions>
		
    </properties>

    <dependencies>

        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <exclusions>
            	<exclusion>
            		<groupId>bouncycastle</groupId>
            		<artifactId>bcmail-jdk14</artifactId>
            	</exclusion>
            	<exclusion>
            		<groupId>org.bouncycastle</groupId>
            		<artifactId>bcmail-jdk14</artifactId>
            	</exclusion>
            	<exclusion>
            		<groupId>bouncycastle</groupId>
            		<artifactId>bcprov-jdk14</artifactId>
            	</exclusion>
            	<exclusion>
            		<groupId>org.bouncycastle</groupId>
            		<artifactId>bcprov-jdk14</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.15</version>
        </dependency>
        <dependency>
            <groupId>net.sf.barcode4j</groupId>
            <artifactId>barcode4j</artifactId>  
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-bridge</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.13</version>
            <type>jar</type>
        </dependency>

        <!-- Dependencia utilizada para quebrar as paginas de um PDF e gerar o relatorio de exportação do PAE-->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.11</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>br.gov.caixa</groupId>
            <artifactId>SECLI-ejb</artifactId>
            <type>ejb</type>
            <version>RELEASE</version>
        </dependency>

        <!-- Arquitetura -->
        <dependency>
            <groupId>br.gov.caixa.pedesgo</groupId>
            <artifactId>arquiteturajee7</artifactId>
            <version>RELEASE</version>
        </dependency>
                
        <dependency>
            <groupId>br.gov.caixa.pedesgo</groupId>
            <artifactId>sicli-api</artifactId>
            <version>1.3.3</version>
        </dependency>
		
        <dependency>
            <groupId>br.gov.caixa.pedesgo</groupId>
            <artifactId>caixa-keycloak</artifactId>
            <version>RELEASE</version>
            <exclusions>
            	<exclusion>
            		<groupId>org.bouncycastle</groupId>
            		<artifactId>bcprov-jdk15on</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        
        <!-- servico siric -->
        <dependency>
			<groupId>br.gov.caixa.pedesgo</groupId>
			<artifactId>siric-api</artifactId>
			<version>1.3.1</version>
		</dependency>

        <!-- JavaEE7 org.jboss.resteasy:resteasy-multipart-provider:jar:3.0.6.Final, 
        org.jboss.resteasy:resteasy-jaxrs:jar:3.0.6.Final, org.jboss.resteasy:jaxrs-api:jar:3.0.6.Final, 
        org.apache.httpcomponents:httpclient:jar:4.2.1, org.apache.httpcomponents:httpcore:jar:4.2.1, 
        org.jboss.resteasy:resteasy-client:jar:3.0.6.Final, org.jboss.resteasy:resteasy-jaxb-provider:jar:3.0.6.Final, 
        javax.xml.bind:jsr173_api:jar:1.
        0, org.apache.james:apache-mime4j:jar:0.6: -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in 
        JBoss EAP -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope 
        as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included 
        in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in 
        JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in 
        JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Use JSON do parse messages from websocket , we use provided scope 
        as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.json</groupId>
            <artifactId>jboss-json-api_1.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the WebSocket API, we use provided scope as the API is included 
        in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.websocket</groupId>
            <artifactId>jboss-websocket-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Java library for Javascript Object Signing and Encryption (JOSE) and 
        JSON Web Tokens (JWT) -->
        <!-- <dependency> -->
        <!-- <groupId>com.nimbusds</groupId> -->
        <!-- <artifactId>nimbus-jose-jwt</artifactId> -->
        <!-- <version>4.37</version> -->
        <!-- </dependency> -->

        <!-- The slf4j API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        
        <!-- Realizado alinhamento entre Fabio e Ricardo em 11/06/2019 -->
        <!-- Depedência incluida no escopo de testes para viabilizar a execução do teste unitario que 
        envolve o UtilJWT que possui declarado o Logger da apache como dependência -->
        <!-- Após ajuste no arquitetura esta dependência deverá ser removida. -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- http://mvnrepository.com/artifact/org.jboss.spec.javax.interceptor/jboss-interceptors-api_1.2_spec -->
        <dependency>
            <groupId>org.jboss.spec.javax.interceptor</groupId>
            <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Bean Validation Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Now we declare any tools needed -->

        <!-- Annotation processor that raising compilation errors whenever constraint 
        annotations are incorrectly used. -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Postgres -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
        </dependency>
        
        <!-- Swagger Jaxrs to API documentation -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <!-- <version>1.5.13</version> -->
        </dependency>

        <!-- Biblioteca usada para upload de arquivos UploadRESTService /upload/v2 -->
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${version.jersey.multipart}</version>
        </dependency>

        <!-- Biblioteca usada para upload de arquivos UploadRESTService /upload/v1 -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
        JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>br.gov.caixa.pedesgo</groupId>
            <artifactId>siiso-api</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
		  <groupId>br.gov.caixa.pedesgo</groupId>
		  <artifactId>caixa-verificapdf</artifactId>
		  <version>1.1.0-20200528.1</version>
		</dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <directory>src/main/resources</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF/classes</targetPath>
                            <excludes>
                                <exclude>relatorios/**</exclude>
                            </excludes>
                        </resource>
                        <resource>
                            <directory>src/main/resources/relatorios</directory>
                            <filtering>false</filtering>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                    </webResources>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>com.thoughtworks.xstream</groupId>
                        <artifactId>xstream</artifactId>
                        <version>1.4.10-java7</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.plugin.version}</version>
                <configuration>
                    <driver>${database.driver}</driver>
                    <url>${database.url}</url>
                    <user>${database.user}</user>
                    <password>${database.password}</password>
                    <schemas>
                        <schema>${database.schema}</schema>
                    </schemas>
                    <locations>
                        <location>classpath:db/migration/</location>
                    </locations>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>cobertura</id>
            <properties>
                <sonar.coverage.exclusions>src/main/java/br/gov/caixa/simtr/modelo/mapeamento/**/*, src/main/webapp/**/*,src/test/java/**/*,src/main/java/br/gov/caixa/simtr/controle/excecao/**/*,src/main/java/br/gov/caixa/simtr/controle/vo/**/*,src/main/java/br/gov/caixa/simtr/modelo/entidade/**/*,src/main/java/br/gov/caixa/simtr/modelo/enumerator/**/*,src/main/java/br/gov/caixa/simtr/modelo/enumerator/serializer/**/*,src/main/java/br/gov/caixa/simtr/relatorio/dossiedigital/**/*,src/main/java/br/gov/caixa/simtr/relatorio/pae/**/*,src/main/java/br/gov/caixa/simtr/visao/**/*,src/main/java/br/gov/caixa/simtr/visao/adapter/**/*,src/main/java/br/gov/caixa/simtr/visao/dossiedital/dto/antifraude/**/*,src/main/java/br/gov/caixa/simtr/visao/dossiedital/dto/autorizacao/**/*,src/main/java/br/gov/caixa/simtr/visao/dossiedital/dto/documento/**/*,src/main/java/br/gov/caixa/simtr/visao/dossiedital/dto/manutencao/**/*,src/main/java/br/gov/caixa/simtr/visao/dto/**/*,src/main/java/br/gov/caixa/simtr/visao/negocio/dto/dashboard/**/*,src/main/java/br/gov/caixa/simtr/visao/negocio/dto/documento/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/documento/funcao/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/dossiecliente/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/dossiecliente/cadastro/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/dossieproduto/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/dossieproduto/cadastro/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/elementoconteudo/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/formulario/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/garantia/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/garantia/funcaodocumento/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/processo/garantia/tipodocumento/**/*,src/main/java/br.gov/caixa/simtr/visao/negocio/dto/tratamento/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/cadastro/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/apenso/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/contrato/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/processo/**/*,src/main/java/br.gov/caixa/simtr/visao/pae/dto/tipologia/**/*,src/main/java/br.gov/caixa/simtr/visao/publico/dto/avaliacaoextracao/**/*,src/main/java/br/gov/caixa/simtr/visao/dossiedigital/rest/v1/**/*,src/main/java/br/gov/caixa/simtr/visao/negocio/rest/v1/**/*,src/main/java/br/gov/caixa/simtr/visao/negocio/rest/v2/**/*,src/main/java/br/gov/caixa/simtr/visao/pae/rest/v1/**/*,src/main/java/br/gov/caixa/simtr/visao/publico/rest/v1/**/*,src/main/java/br/gov/caixa/simtr/visao/rest/**/*</sonar.coverage.exclusions>
            </properties>
        </profile>
        <profile>
            <id>test-int</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>jboss-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jboss.as.plugins</groupId>
                        <artifactId>jboss-as-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>sonar-local</id>
            <properties>
                <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
                <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.7.9</version>
                        <executions>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which 
                            is passed as VM argument when Maven the Surefire plugin is executed. -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo 
                                    runtime agent. -->
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for unit tests is created 
                            after unit tests have been run. -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                </configuration>
                            </execution>
                            <!-- The Executions required by unit tests are omitted. -->
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which 
                            is passed as VM argument when failsafe plugin is executed. -->
                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${sonar.jacoco.itReportPath}</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo 
                                    runtime agent. -->
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for integration tests after 
                            integration tests have been run. -->
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
